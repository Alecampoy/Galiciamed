#print(g)
temp_File <- read.csv(paste(temp_folder, g, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
# evita un error si se han manipulado los archivos xls
if (class(temp_File[[1]]) == "character") {
#temp_File <- temp_File[-c(nrow(temp_File)-1,nrow(temp_File)),]
temp_File <- as.data.frame(apply(temp_File, 2, function(x) as.numeric(x)))
temp_File <- na.omit(temp_File)
}
temp_medidas <- tryCatch(data.frame(condicion, muestra, fecha, g,  sum(temp_File$Volume..nm.3.),
sum(temp_File$Surface..nm.2.), sum(temp_File$IntDen),
mean(temp_File$Mean), mean(temp_File$StdDev)), error = function(e) print(paste(carpeta,"--",g)))
colnames(temp_medidas) <- colnames(medidas)
medidas <- rbind(medidas, temp_medidas)
}}
print("fitino")
View(medidas)
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
return(data_experiment)
}
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
return(data_experiment)
}
a <- process_experiment(data_folder)
View(a)
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
#process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
return(data_experiment)
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
#process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
#return(data_experiment)
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
#print("fitino")
return(data_experiment)
}
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
sample_folders
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
temp_file
View(temp_file)
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
(apply(temp_file, 2, function(x) as.numeric(x)))
as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
a <- process_experiment(data_folder)
process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
print("fitino")
return(data_experiment)
}
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
a <- process_experiment(data_folder)
process_experiment <- function(data_folder){
# Empty DF to save the measurements data and lists for the loaded elements
data_experiment <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(data_experiment) <- c("Condition","Sample", "Date", "Worm", "Sum_vol","Sum_IntDen", "Media_Mean", "Media_StdDev")
samples_list <- c()
conditions_list <- c()
dates_list <- c()
# Generation of the data for each sample. Each sample's data is inside a folder, then each folder inside the data folder is processed
# Each folder with one experiment is named ´CONDITION - DATE´ with " - " as separator
sample_folders <- list.dirs(data_folder, recursive = FALSE)
for (folder_temp in sample_folders){
# Extraction of the sample from the folder name
sample <- last(strsplit(folder_temp, '/')[[1]])
samples_list <- append(samples_list, sample)
# Extraction of the condition and date from the sample name via regex
condition <- substring(sample, 1, regexpr("\\s-\\s", sample)-1)
if (!is.element(condition, conditions_list)){
conditions_list <- append(conditions_list, condition)} # not to repeat the condition in the list
date <- substring(sample, regexpr("\\s-\\s", sample)+3)
if (!is.element(date, dates_list)){
dates_list <- append(dates_list, date)}
# Reading of every data file inside the folder. Each xls file represents the measurements in one c.elegans sample image
# .xls  are tsv. Useful columns are selected.
for (file in dir(folder_temp, pattern = "xls")) {
temp_file <- read.csv(paste(folder_temp, file, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
if (class(temp_file[[1]]) == "character") {
# this ´if´ avoids an error if the file is not read properly or was modified in excel, since the firs column should be a numeric index
temp_file <- as.data.frame(apply(temp_file, 2, function(x) as.numeric(x)))
temp_file <- na.omit(temp_file)
}
# Since the interesting value is the total expression of smn-1, values of each file are aggregated with the sum of the integrated density. This way, each c.elegant becomes an observation into our dataset
temp_measurements <-
tryCatch(
data.frame(
condition,
sample,
date,
file,
sum(temp_file$Volume..nm.3.),
sum(temp_file$IntDen),
mean(temp_file$Mean),
mean(temp_file$StdDev)
),
error = function(e) {print(paste("error in --", folder_temp, "--", file))}
)
colnames(temp_measurements) <- colnames(data_experiment)
data_experiment <- rbind(data_experiment, temp_measurements)
}
}
#print("Processed succesfully")
return(data_experiment)
}
data_folder <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos'
a <- process_experiment(data_folder)
file_Path <- 'p:/CABD/Lab Manolo Muñoz/Ana Maria Brokate/Graficas Paper/datos/'
medidas <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(medidas) <- c("Condition","Experimento", "Fecha", "Gusano", "Sum_vol", "Sum_Surface",
"Sum_IntDen", "Media_Mean", "Media_StdDev")
datos_folder <- dir(file_Path)
muestras <- c()
condiciones <- c()
fechas <- c()
for (carpeta in datos_folder){
temp_folder <- paste(file_Path, carpeta, sep = "")
# el experimento y un vector con todos las muestras
muestra <- unlist(strsplit(temp_folder, '/'))[length(unlist(strsplit(temp_folder, '/')))-0]
muestras <- append(muestras, muestra)
# la condicion del experimento y un vector con todas las condiciones
condicion <- substring(muestra, 1, regexpr("\\s-\\s", muestra)-1)
if (!is.element(condicion, condiciones)){
condiciones <- append(condiciones, condicion)}
# La fecha de adquisición
fecha <- substring(muestra, regexpr("\\s-\\s", muestra)+3)
if (!is.element(fecha, fechas)){
fechas <- append(fechas, fecha)}
#print(carpeta)
# leemos los archivos de cada muestra
for (g in dir(temp_folder, pattern = "xls")) {
#print(g)
temp_File <- read.csv(paste(temp_folder, g, sep = "/"), header = TRUE, sep = "\t", dec = ".", fill = TRUE)[,c(1,2,3,6,7,8)]
# evita un error si se han manipulado los archivos xls
if (class(temp_File[[1]]) == "character") {
#temp_File <- temp_File[-c(nrow(temp_File)-1,nrow(temp_File)),]
temp_File <- as.data.frame(apply(temp_File, 2, function(x) as.numeric(x)))
temp_File <- na.omit(temp_File)
}
temp_medidas <- tryCatch(data.frame(condicion, muestra, fecha, g,  sum(temp_File$Volume..nm.3.),
sum(temp_File$Surface..nm.2.), sum(temp_File$IntDen),
mean(temp_File$Mean), mean(temp_File$StdDev)), error = function(e) print(paste(carpeta,"--",g)))
colnames(temp_medidas) <- colnames(medidas)
medidas <- rbind(medidas, temp_medidas)
}}
print("fitino")
